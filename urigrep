#!/bin/bash
# urigrep - Parse url/uri links
# by AngelD

# display help banner
if [[ $# -eq 0 && ! -p /dev/stdin ]]; then
  echo "Uri Grep - A utility for quickly return uri/url links."
  echo "Usage: 'urigrep (<url>, <stdin>) -h, --help'"
  exit
fi

arg_show_help=$(echo 'no')
argidx=0 # arg index
for arg in $@; do
argidx=$((argidx+1)) # index of arg
validx=$((argidx+1)) # index of arg-value (next arg)
  if [[ '-h' == "${arg}" || '--help' == "${arg}" ]]; then
    arg_show_help=$(echo 'yes')
 fi
done

#---- validate argument ----
if [[ $arg_show_help == 'no' ]]; then
if [[ "$#" -gt 0 ]]; then
  if [[ "$#" -eq 1 ]]; then
    if [[ "$1" != "http"* ]]; then
      echo "urigrep: invalid url '$1'"
      arg_show_help=$(echo 'yes')
    fi
  else
    echo "urigrep: invalid options -- '$@'"
    arg_show_help=$(echo 'yes')
  fi
fi
fi

# display help
if [[ $arg_show_help == 'yes' ]]; then
  echo "Uri Grep - A utility for quickly return uri/url links."
  echo "Usage: 'urigrep (<url>)'"
  exit
fi

if [[ "$#" -eq 1 ]]; then
  data=$(curl -s "$1")
elif [[ -p /dev/stdin ]]; then
  data=$(cat "/dev/stdin")
fi

if [[ "${#data}" -gt 0 ]]; then
  echo "$data" | grep -Eo "href=.*" | sed 's/href=//g' | sed 's/ .*//g' | sed 's/"//g' | sed "s/'//g" | sed 's/>.*//g' | grep -vE "^$"
  echo "$data" | grep -Eo "http[s]{0,1}://[^\"'< ]+" | grep -vE "^$"
  echo "$data" | grep -Eo " src=[\"']{1}[^\"']+" | sed 's/ src=//g' | sed "s/^'//g" | sed 's/^"//g' | grep -vE "^$"
fi
